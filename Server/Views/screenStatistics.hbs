<html lang="en">

<head>
  <title>Thống kê</title>
  <link rel="stylesheet" href="styles.css">
  <script src="https://code.highcharts.com/highcharts.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <!-- Latest compiled and minified CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

  <!-- Latest compiled JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <style>
    body {
      font-family: 'Arial', sans-serif;
    }
    .mess {
      position: relative;
      display: inline-block;
    }

    .mess::after {
      content: "";
      position: absolute;
      left: 0;
      bottom: 0;
      width: 0;
      height: 1px;
      background-color: white;
      transition: width 0.5s ease-in-out;
    }

    .mess:hover::after {
      width: 100%;
    }

    .highcharts-figure,
    .highcharts-data-table table {
      min-width: 320px;
      max-width: 1179px;
    }

    .body-Main {
      display: flex;
      width: 100%;
      height: 100%;
    }

    .box-Main-One {
      width: 17%;
      height: 100%;
      background-color: rgba(49, 46, 129, var(--tw-bg-opacity));
      display: flex;
      flex-direction: column;
    }

    .box-Text-Title {
      background-color: rgba(55, 48, 163, var(--tw-bg-opacity));
      height: 13%;
      width: 100%;
    }

    .text-Title {
      color: white;
      font-size: 24px;
      padding: 24px;
      font-family: sans-serif;
      font-weight: 600;
    }

    .box-Main-Two {
      width: 84%;
      height: 100%;
    }

    .box-Main-Extra {
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
    }

    .box-infomation {
      width: 100%;
      height: 11%;
    }

    .information {
      display: flex;
      height: 100%;
      width: 100%;
      justify-content: space-between;
      padding: 0 18px;
      background: white;
      align-items: center;
    }

    .information-Admin {
      display: flex;
      width: 8%;
      justify-content: space-between;
      align-items: center;
    }

    .link-a:hover {
      text-decoration: none;
    }

    .link-a {
      color: black;
      font-size: 16px;
      font-family: sans-serif;
      text-decoration: none;
    }

    .box-order-Main {
      width: 100%;
      height: 89%;
    }

    .table-order {
      width: 100%;
      height: 87%;
    }

    .item-click {
      height: 87%;
      width: 100%;
    }

    .load-Spinner {
      padding: 20%;
      width: 100%;
      text-align: center;
    }

    #container {
      height: 47%;
      width: 40%;
      position: absolute;
    }

    #container2 {
      height: 46%;
      width: 40%;
      position: absolute;
    }

    .dropdown-Op {
      outline: none;
      padding: 8px;
      border-radius: 8px;
      cursor: pointer;
    }

    .box-Main-TK {
      padding-top: 8px;
      height: 67%;
      display: flex;
      justify-content: space-around;
    }

    .box-TopFive {
      width: 49%;
    }

    .box-Year {
      width: 49%;
    }

    .box-All-TK {
      width: 98%;
      height: 97%;
      background: white;
      margin: 14px;
    }

    .text-click-L {
      display: flex;
      font-size: 20px;
      font-family: sans-serif;
      font-weight: 600;
      width: 20%;
    }

    .text-item-click {
      cursor: pointer;
      padding: 8px 14px;
    }

    .box-title {
      height: 5%;
    }

    .display_None {
      display: none;
    }

    .box-total-acc {
      padding: 8px 14px;
      height: 33%;
    }

    .text-top5 {
      text-align: center;
      font-size: 21px;
      font-weight: 600;
      line-height: 40px;
    }

    .text-main {
      line-height: 42px;
      font-size: 20px;
      font-weight: 600;
    }

    .text-main-Two {
      width: 50%;
      line-height: 42px;
      font-size: 20px;
      font-weight: 600;
      text-align: center;
    }

    .box-one {
      height: 7%;
    }

    .box-two {
      height: 93%;
    }

    .box-size-table {
      display: flex;
      align-items: center;
      justify-content: end;
      padding: 14px 0;
      width: 100%;
    }

    .text-box-size-table {
      font-size: 16px;
      font-weight: 600;
      margin-right: 8px;
    }

    .box-arrow {
      display: flex;
      width: 10%;
      justify-content: space-around;
    }

    .box-extra-arrow {
      padding: 6px;
      border: 0.5px solid;
      cursor: pointer;
      margin-right: 2px;
    }

    .box-extra-arrow:hover {
      background: #dedede
    }

    .box-text-total {
      display: flex;
      justify-content: space-around;
    }

    .box-one-views {
      height: 39%;
      display: flex;
      justify-content: space-between;
      padding: 8px 14px;
    }

    .box-two-view {
      height: 60%;
      padding: 8px 14px;
    }

    .box-one-extra {
      width: 27%;
    }

    .box-Ds-Date {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .box-two-extra {
      width: 68%;
    }

    .text-Ds {
      font-size: 17px;
      font-family: sans-serif;
      line-height: 48px;
    }

    .text-top3 {
      font-size: 18px;
      font-family: sans-serif;
      line-height: 44px;
    }

    .display-None {
      display: none;
    }

    .backGround {
      background: white
    }

    .oderNew {
      font-weight: 600;
      height: 14%;
    }

    .table-order-New {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      height: 75%;
    }

    .table-no-Order {
      display: flex;
      height: 75%;
      align-items: center;
      justify-content: center;
      font-size: 24px;
      font-family: sans-serif;
    }

    .text-Status-table {
      font-family: sans-serif;
      font-weight: 600;
    }
  </style>
</head>
<body class="bg-gray-200">
<div id="dataALL">
  <div class="body-Main">
    <div class="box-Main-One">
      <div class="box-Text-Title">
        <div class="text-Title">Shop BipBip</div>
      </div>
      <div class="item-click">
        <a href="/statistic" class=" cursor-pointer mess ml-3 mt-3 w-10/12"
           style="border-bottom-width: 1px;text-decoration: none ">
          <div class="flex" style=" padding: 12px;">
            <div>
              <img class="w-5 h-5" src="analytics.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100 ">Thống kê</div>
          </div>
        </a>
        <a href="/home" class=" cursor-pointer mess ml-3 mt-3 w-10/12"
           style="display: flex; text-decoration: none ">
          <div class="flex" style=" padding: 12px;">
            <div>
              <img class="w-5 h-5" src="dashboard.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100 ">Đơn Hàng</div>
          </div>
          <span class="badge" style="color: white;font-size: 14px;">\{{donHangMoi}}</span>
        </a>
        <a href="/mess" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="display: flex; text-decoration: none">
          <div class="flex" style="padding: 12px;">
            <div>
              <img class="w-5 h-5 " src="messages.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100 ">Tin Nhắn</div>
          </div>
          <span class="badge" style="color: white;font-size: 14px;">\{{tinNhanMoi}}</span>
        </a>
        <a href="/notifications" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="text-decoration: none">
          <div class="flex" style=" padding: 12px;">
            <div>
              <img class="w-5 h-5" src="notifications.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100">Thông báo</div>
          </div>
        </a>
        <a href="/accountManagement" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="display: flex; text-decoration: none">
          <div class="flex" style="padding: 12px;">
            <div>
              <img class="w-5 h-5 " src="iconuser.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100 ">Quản Lý người dùng</div>
          </div>
        </a>
        <a href="/warehouse" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="text-decoration: none">
          <div class="flex" style=" padding: 12px;">
            <div>
              <img class="w-5 h-5" src="kho.svg" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100">Kho Hàng</div>
          </div>
        </a>
      </div>
    </div>

    <div class="box-Main-Two">
      <div class="box-Main-Extra">
        <div class="box-infomation">
          <div class="information">
            <div class="information-Admin">
              <img src="person.png" class="w-10 h-10" alt="">
              <span>Admin</span>
            </div>
            <div>
              <a class="link-a" href="/login">Đăng xuất</a>
            </div>
          </div>
        </div>

        <div class="box-order-Main">
          <div :class="checkStatus ? ' ' : 'display_None' " class="load-Spinner">
            <div class="spinner-border text-primary"></div>
          </div>

          <div id="hienThidata" :class="checkStatus ? 'display_None' : ' ' ">
            <div class="box-All-TK">
              <div class="bg-gray-200 box-one">
                <div class="text-click-L">
                  <div class="text-item-click" @click="tabOne" :class="{'backGround': boxTwo}">Tổng quan</div>
                  <div class="text-item-click" @click="tabTwo" :class="{'backGround': boxOne}">Chi tiết</div>
                </div>
              </div>

              <div class="box-two" :class="{'display-None': boxOne}">
                <div class="box-total-acc">
                  <div>
                    <div class="text-main">
                      Tài khoản
                    </div>
                    <div>
                      <table class="table table-bordered">
                        <thead>
                        <tr>
                          <th>Tổng số tài khoản</th>
                          <th>Tài khoản mới tạo trong tháng</th>
                          <th>Tài khoản đang hoạt động</th>
                          <th>Tài khoản bị khóa</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                          <td>\{{totalUser}}</td>
                          <td>\{{totalUserNew}}</td>
                          <td>\{{totalUserActivity}}</td>
                          <td>\{{totalUserBlock}}</td>

                        </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>
                  <div class="box-text-total">
                    <div class="text-main-Two">
                      Tổng số sản phẩm đang có: \{{totalProduct.totalProducts}} sản phẩm
                    </div>
                    <div class="text-main-Two" style="display: flex;justify-content: center">
                      <div>
                        Tổng doanh số năm
                      </div>
                      <div>
                        <select name="dateYearOne" class="dropdown-Op" v-model="selectYearOne"
                                @change="selectClickYearOne">
                          <option v-for="item in numberYear" :value="item" :key="item">\{{item}}</option>
                        </select>
                      </div>
                      <div>: \{{formatPrice(numberMoney)}}</div>
                    </div>
                  </div>
                </div>
                <div class="box-Main-TK">

                  <div class="box-TopFive">
                    <div class="text-top5">
                      Top 5 sản phẩm bán chạy
                    </div>
                    <figure class="highcharts-figure">
                      <div id="container"></div>
                    </figure>
                  </div>

                  <div class="box-Year">
                    <div style="display: flex;align-items: center;justify-content: center;" class="text-top5">
                      <div>
                        Thống kê doanh số các tháng năm:
                      </div>

                      <select id="dateYearSelect" name="dateYear" class="dropdown-Op" v-model="selectYear"
                              @change="selectClickYear">
                        <option v-for="item in numberYear" :value="item" :key="item">\{{item}}</option>
                      </select>
                    </div>
                    <figure class="highcharts-figure">
                      <div id="container2"></div>
                    </figure>
                  </div>
                </div>
              </div>
              <div class="box-two" :class="{'display-None': boxTwo}" style="background: white">
                <div class="box-one-views">
                  <div class="box-one-extra">
                    <div class="box-Ds-Date">
                      <div class="text-Ds">
                        Doanh số trong ngày
                      </div>
                      <div>
                        <input type="date" class="form-control" v-model="selectedDate" @change="handleDateChange">
                      </div>
                    </div>
                    <div style="display: flex">
                      <div class="text-Ds">
                        Tổng số tiền:
                      </div>
                      <div class="text-Ds" style="font-weight: 600; color: red;margin-left: 8px">
                        \{{formatPrice(numberMoneyOneDay)}}
                      </div>
                    </div>
                  </div>

                  <div class="box-two-extra">
                    <div class="text-top3">
                      Top khách hàng mua nhiều
                    </div>
                    <div>
                      <table class="table table-bordered">
                        <thead>
                        <tr>
                          <th style="text-align: center;width: 110px">STT</th>
                          <th style="text-align: center;">Tên</th>
                          <th style="text-align: center;">Tài khoản đặt</th>
                          <th style="text-align: center;">Số hóa đơn</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr v-for="(item,index) in dataTopCustom">
                          <td>Top \{{index + 1}}</td>
                          <td>\{{item.name}}</td>
                          <td>\{{item.username}}</td>
                          <td>\{{item.totalOrders}}</td>
                        </tr>

                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>

                <div class="box-two-view">
                  <div class="text-top3 oderNew"> Đơn hàng mới trong ngày</div>
                  <div class="table-order-New" v-if="sizeOder !== 0">
                    <div style="height: 98%">
                      <table class="table table-bordered">
                        <thead>
                        <tr>
                          <th style="text-align: center;width: 110px">STT</th>
                          <th style="text-align: center;">Mã Đơn Hàng</th>
                          <th style="text-align: center;">Tài khoản đặt</th>
                          <th style="text-align: center;width: 120px">Số lượng</th>
                          <th style="text-align: center;width: 130px">Giá tiền</th>
                          <th style="text-align: center;width: 100px">Chi tiết</th>
                          <th style="text-align: center;width: 145px;">Trạng thái</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr v-for="(item,index) in dataOrderNews[indexSize-1]">
                          <td>\{{((indexSize-1) * 4)+index+1}}</td>
                          <td>\{{item._id}}</td>
                          <td>\{{item.customer_email}}</td>
                          <td>\{{item.total_quantity}}</td>
                          <td>\{{formatPrice(item.total_amount)}}</td>
                          <td>
                            <img width="40px" src="detail.png" class="btn btn-primary btn-sm"
                                 @click="openModalXemChiTiet(dataOrderNews[indexSize-1][index])"/>
                          </td>
                          <td>Chờ xác nhận</td>
                        </tr>
                        </tbody>
                      </table>
                    </div>
                    <div class="box-size-table" v-if="sizeOder > 4">
                      <div class="text-box-size-table">\{{sizeTable(indexSize)}} của tổng số \{{sizeOder}}</div>
                      <div class="box-arrow">
                        <div class="box-extra-arrow" @click="backSize(dataOrderNews)">
                          <img src="next.png" style="width: 24px" alt="">
                        </div>
                        <div class="box-extra-arrow" @click="arrowBackSize(dataOrderNews)">
                          <img src="back-arrow.png" style="width: 24px" alt="">
                        </div>
                        <div class="box-extra-arrow" @click="arrowNextSize(dataOrderNews)">
                          <img src="right-arrow.png" style="width: 24px" alt="">
                        </div>
                        <div class="box-extra-arrow" @click="nextSize(dataOrderNews)">
                          <img src="back.png" style="width: 24px" alt="">
                        </div>
                      </div>
                    </div>
                  </div>

                  <div class="table-no-Order" v-if="sizeOder === 0">
                    Chưa có đơn hàng mới nào trong ngày
                  </div>
                </div>

              </div>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="xemChiTiet" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
       aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Thông tin chi tiết</h5>
          <button type="button" class="close" @click="closeModalXemChiTiet" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div style="margin-bottom: 2px" class="modal-body">
          <div>
            Họ và tên: \{{dataXemChiTiet.userName}} <br>
            Số điện thoại: \{{dataXemChiTiet.phone}}<br>
            Địa chỉ: \{{dataXemChiTiet.address}}
          </div>
          <div v-for="(item,index) in dataXemChiTiet.products" style="display: flex;padding: 12px">
            <img style="height: 80px; margin-right: 8px;width: 80px;  border-radius: 8px;"
                 :src=(item.img_product) alt="">
            <div style="width: 100%">
              <div style="font-weight: 700;font-size: 16px">
                \{{item.name_Product}}
              </div>
              <div style="display: flex;justify-content: space-between;">

                <div style="display: flex">
                  <div style="color:#656769; margin-right: 7px">
                    \{{item.name_Color}}
                  </div>
                  <div style="color:#656769;">
                    \{{item.name_Size}}
                  </div>
                </div>

                <div>
                  x \{{item.quantityProduct}}
                </div>
              </div>
              <div style="text-align: end;color: red">
                \{{formatPrice(item.name_Price)}}

              </div>
            </div>
          </div>

          <div style="display: flex; text-align: end;justify-content: end;">
            Tổng tiền:
            <div style="color: red;font-weight: 700;margin-left: 7px;"> \{{formatPrice(dataXemChiTiet.total_All)}}</div>
          </div>
          <div style="display: flex; text-align: end;justify-content: end;"
               v-if="dataXemChiTiet.status === 3 || dataXemChiTiet.status === 9">
            Ngày giao: \{{formatDate(dataXemChiTiet.order_date)}}
          </div>
          <div style="display: flex; text-align: end;justify-content: end;"
               v-if="dataXemChiTiet.status !== 3 && dataXemChiTiet.status !== 9">
            Ngày đặt: \{{formatDate(dataXemChiTiet.order_date)}}
          </div>
          <div style="display: flex;" v-if="dataXemChiTiet.lyDoHuyDon && dataXemChiTiet.status === 9">
            Lý do hủy trả hàng:
            <div style="font-weight: 600;margin-left: 7px;"> \{{dataXemChiTiet.lyDoHuyDon}}</div>
          </div>
          <div style="display: flex;" v-if="dataXemChiTiet.lyDoHuyDon && dataXemChiTiet.status !== 9">
            Lý do hủy đơn hàng:
            <div style="font-weight: 600;margin-left: 7px;"> \{{dataXemChiTiet.lyDoHuyDon}}</div>
          </div>
        </div>

      </div>
    </div>
  </div>
</div>

</body>

<script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
<script>
  var vm = new Vue({
    el: "#dataALL",
    data: {
      tinNhanMoi: 0,
      donHangMoi: 0,
      boxOne: false,
      boxTwo: true,
      totalUser: 0,
      totalUserNew: 0,
      totalUserActivity: 0,
      totalUserBlock: 0,
      numberYear: ['2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029'],
      selectYear: new Date().getFullYear(),
      selectYearOne: new Date().getFullYear(),
      dataOrderNews: {},
      dataXemChiTiet: {},
      indexSize: 1,
      sizeOder: 0,
      dataTopCustom: {},
      checkStatus: true,
      numberMoney: 0,
      selectedDate: new Date().toISOString().split('T')[0],
      numberMoneyOneDay: 0,
      totalProduct:0
    },
    mounted() {
      const socket = io();
      const self = this;
      socket.on('server-send', () => {
        self.GetAllDataChat();
        self.GetDataCart();
        self.GetDataUser();
        self.GetOrderNews();
        self.GetDataTopCustom();
      });
      this.socket = socket;
    },
    beforeDestroy() {
      const socket = io();
      if (socket) {
        this.socket.disconnect();
      }
    },
    methods: {
      formatPrice(value) {
        let val = (value / 1).toFixed(0);
        return val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " đ";
      },
      sizeTable(vale) {
        const start = (vale - 1) * 4 + 1
        const end = (vale - 1) * 4 + 4
        return `${start} - ${end}`;
      },
      nextSize(arr) {
        var self = this
        self.indexSize = arr.length
      },
      arrowNextSize(arr) {
        var self = this
        var i = self.indexSize
        if (0 < i && i < arr.length) {
          self.indexSize = i + 1
        }
        console.log(i)
      },
      arrowBackSize(arr) {
        var self = this
        var i = self.indexSize
        if (1 < i && i <= arr.length) {
          self.indexSize = i - 1
        }
        console.log(i)
      },
      backSize(arr) {
        var self = this
        self.indexSize = 1
      },
      formatDate(vale) {
        const date = new Date(vale);
        const year = date.getFullYear();
        const month = date.getMonth() + 1;
        const day = date.getDate();
        return `${day}-${month}-${year}`;
      },
      formatPrice(value) {
        let val = (value / 1).toFixed(0);
        return val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " đ";
      },
      openModalXemChiTiet(data) {
        this.dataXemChiTiet = data
        $('#xemChiTiet').modal('show');
      },
      closeModalXemChiTiet() {
        this.dataXemChiTiet = {};
        $('#xemChiTiet').modal('hide');
      },
      tabTwo() {
        var self = this
        self.boxOne = true
        self.boxTwo = false
      },
      tabOne() {
        var self = this
        self.boxOne = false
        self.boxTwo = true
      },
      selectClickYearOne() {
        vm.GetThongKeYearOne()
      },
      selectClickYear() {
        vm.GetThongKeYear()
      },
      handleDateChange(event) {
        var self = this
        const newDate = event.target.value;
        self.selectedDate = newDate
        self.GetDataTKOneDay()
      },
      GetAllDataChat: function () {
        var self = this;
        fetch('/chatAllShop', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        })
            .then(response => response.json())
            .then(data => {
              const sortedData = data.sort((a, b) => {
                if (a.status === b.status) {
                  return 0;
                }
                return a.status ? -1 : 1;
              });
              self.tinNhanMoi = sortedData.filter(item => item.status === true).length
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataCart: function () {
        var self = this;
        fetch('/loadDataChoXacNhan', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.donHangMoi = data.length
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataTKOneDay: function () {
        var self = this
        fetch('/statistics/revenueOneDate/' + self.selectedDate, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.numberMoneyOneDay = data.totalRevenue
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataUser: function () {
        var self = this;
        fetch('/totalUser', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.totalUser = data
            })
            .catch(error => {
              console.error(error);
            });
        fetch('/totalNewUser', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.totalUserNew = data
            })
            .catch(error => {
              console.error(error);
            });
        fetch('/totalUserActive', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.totalUserActivity = data
            })
            .catch(error => {
              console.error(error);
            });
        fetch('/totalUserBlock', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.totalUserBlock = data
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetTopFive: function () {
        var self = this
        fetch('/statistics/sold-products', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {

              let dataAll = [];
              for (let i = 0; i < data.length; i++) {
                dataAll.push({
                  name: data[i].name,
                  y: parseFloat(data[i].totalDetail)
                })
              }
              highChart(dataAll)
              self.checkStatus = false
            })
            .catch(error => {
              console.error(error);
            });
      },

      GetThongKeYearOne: function () {
        var self = this
        fetch('/api/orders-by-year/' + self.selectYearOne, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.numberMoney = data.totalRevenue
            })
            .catch(error => {
              console.error(error);
            });
      },

      GetThongKeYear: function () {
        var self = this
        fetch('/statistics/revenue/' + self.selectYear, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              let dataAllRevenue = [];
              for (let i = 0; i < data.length; i++) {
                dataAllRevenue.push(data[i].totalRevenue)
              }
              highChartColum(dataAllRevenue)
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetOrderNews: function () {
        var self = this
        fetch('/orderNews', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              var oderNews = splitList(data, 4)
              self.dataOrderNews = oderNews
              self.sizeOder = data.length
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataTopCustom: function () {
        var self = this;
        fetch('/top-customers', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.dataTopCustom = data
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataTotalProduct: function () {
        var self = this;
        fetch('/api/countProducts', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.totalProduct = data
            })
            .catch(error => {
              console.error(error);
            });
      },
    }
  })

  vm.GetDataTotalProduct();
  vm.GetDataTKOneDay();
  vm.GetThongKeYearOne();
  vm.GetDataTopCustom();
  vm.GetOrderNews();
  vm.GetThongKeYear();
  vm.GetTopFive();
  vm.GetDataUser();
  vm.GetAllDataChat();
  vm.GetDataCart();

  function splitList(arr, size) {
    let result = [];
    for (let i = 0; i < arr.length; i += size) {
      let chunk = arr.slice(i, i + size);
      result.push(chunk);
    }
    return result;
  }

  function highChart(dataAll) {
    Highcharts.chart('container', {
      credits: {
        enabled: false
      },
      chart: {
        type: 'pie'
      },
      title: {
        text: ''
      },
      tooltip: {
        valueSuffix: '%'
      },
      accessibility: {
        enabled: false,
        point: {
          valueSuffix: '%'
        }
      },
      plotOptions: {
        series: {
          allowPointSelect: true,
          cursor: 'pointer',
          dataLabels: [{
            enabled: true,
            distance: 56
          }]
        },
        pie: {
          allowPointSelect: true,
          borderWidth: 2,
          cursor: 'pointer',
          dataLabels: {
            enabled: true,
            format: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}%</b>',
            distance: 20//độ rộng
          }
        }
      },
      series: [{
        enableMouseTracking: true,//di chuột vào sẽ hiển thị nội dung ben trong
        animation: {
          duration: 2000 //thời gian xuất hiện
        },
        name: 'Tỉ lệ',
        colorByPoint: true,
        data: dataAll
      }]
    });
  }

  function highChartColum(dataAllRevenue) {
    Highcharts.chart('container2', {
      credits: {
        enabled: false
      },
      accessibility: {
        enabled: false
      },
      chart: {
        type: 'column'
      },
      title: {
        text: '',
      },
      subtitle: {
        text: ' ',
      },
      xAxis: {
        categories: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
        crosshair: true,
        accessibility: {
          description: ''
        }
      },
      yAxis: {
        min: 0,

        title: {
          text: ''
        }
      },
      tooltip: {},
      plotOptions: {
        column: {
          pointPadding: 0.2,
          borderWidth: 0
        }
      },
      series: [
        {
          name: 'Doanh số',
          data: dataAllRevenue
        },

      ]
    });
  }
</script>
</html>