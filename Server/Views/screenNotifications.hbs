<html lang="en">

<head>
  <title>Thông báo</title>
  <link rel="stylesheet" href="styles.css">

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <style>
    body {
      margin: 7px auto auto;
    }

    .mess {
      position: relative;
      display: inline-block;
    }
    .displayNone {
      display: none;
    }
    .mess::after {
      content: "";
      position: absolute;
      left: 0;
      bottom: 0;
      width: 0;
      height: 1px;
      background-color: white;
      transition: width 0.5s ease-in-out;
    }

    .mess:hover::after {
      width: 100%;
    }

    .text-inputform {
      resize: none;
      width: 550px;
      outline: unset !important;
      height: 91px;
      border: 0.5px solid #838383;
      padding: 7px;
      border-radius: 8px;
    }

    .box-notification {
      height: 325px;
      margin: 14px;
      padding: 14px;
      background: #f1f1f1;
      overflow: auto;
    }

    .text-title {
      text-align: center;
      font-size: 24px;
      font-weight: 600;
      margin: 8px;
    }

    .width-tab {
      width: 49%;
    }

    /*  dropdow*/
    .dropdown {
      width: 90%;
      position: relative;
      display: inline-block;
    }

    .search {
      width: 100%;
      padding: 5px;
    }

    .options {
      display: none;
      position: absolute;
      z-index: 1;
      background-color: #fff;
      border: 1px solid #ccc;
      max-height: 200px;
      overflow-y: scroll;
    }

    .option {
      padding: 5px;
      cursor: pointer;
    }

    .option:hover {
      background-color: #f2f2f2;
    }

    .text-delete{
      cursor: pointer;
      text-align: end;
      padding-right: 14px;
      color: red;
      font-family: sans-serif;
    }
  </style>
</head>

<body class="bg-gray-200">
<div class="flex" id="dataALL" style="height: 100%;">
  <!--Side Navbar-->
  <div class="bg-indigo-900 w-1/6 ">
    <div class=" bg-indigo-800">
      <div class=" text-xl text-gray-200 uppercase font-bold" style="padding: 33px;">Shop BipBip</div>
    </div>
    <div>
      <a href="/statistic" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="text-decoration: none">
        <div class="flex" style=" padding: 12px;">
          <div>
            <img class="w-5 h-5" src="analytics.png" alt="">
          </div>
          <div class="mx-3 text-sm text-gray-100 ">Thống kê</div>
        </div>
      </a>
      <a href="/home" class=" cursor-pointer mess ml-3 mt-3 w-10/12" style="text-decoration: none;display: flex;  ">
        <div class="flex" style=" padding: 12px;">
          <div>
            <img class="w-5 h-5" src="dashboard.png" alt="">
          </div>
          <div class="mx-3 text-sm text-gray-100 ">Đơn Hàng</div>
        </div>
        <span class="badge" style="color: white;font-size: 14px;">\{{donHangMoi}}</span>
      </a>
      <a href="/mess" class="cursor-pointer mess ml-3 mt-3 w-10/12"
         style=" text-decoration: none; display: flex; ">
        <div class="flex" style=" padding: 12px;">
          <div>
            <img class="w-5 h-5 " src="messages.png" alt="">
          </div>
          <div class="mx-3 text-sm text-gray-100 ">Tin Nhắn

          </div>

        </div>
        <span class="badge" style="color: white;font-size: 14px;">\{{tinNhanMoi}}</span>
      </a>
      <a href="/notifications" class="cursor-pointer mess ml-3 mt-3 w-10/12"
         style="text-decoration: none;border-bottom-width: 1px;">
        <div class="flex" style=" padding: 12px;">
          <div>
            <img class="w-5 h-5" src="notifications.png" alt="">
          </div>
          <div class="mx-3 text-sm text-gray-100">Thông báo</div>
        </div>
      </a>
      <a href="/customer" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="display: flex; text-decoration: none">
        <div class="flex" style="padding: 12px;">
          <div>
            <img class="w-5 h-5 " src="iconuser.png" alt="">
          </div>
          <div class="mx-3 text-sm text-gray-100 ">Quản Lý người dùng</div>
        </div>
      </a>
      <a href="/warehouse" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="text-decoration: none">
        <div class="flex" style=" padding: 12px;">
          <div>
            <img class="w-5 h-5" src="kho.svg" alt="">
          </div>
          <div class="mx-3 text-sm text-gray-100">Kho Hàng</div>
        </div>
      </a>
    </div>
  </div>
  <div class="flex-1">
    <div>
      <div class="bg-white px-2 py-0.5 h-18 flex">
        <div class="left md:w-3/4 sm:w-1/3 flex p-3">
          <img src="person.png" class="w-10 h-10" alt="">
          <span class="block p-2">Admin</span>
        </div>
        <div class="right md:w-1/4 sm:w-2/3 flex  justify-content-end ">
          <a href="/login" style=" text-decoration: none; color: black; line-height: 58px; margin-right: 24px; ">Đăng
            xuất</a>
        </div>
      </div>
    </div>
    <!--Top navbar-->
    <div class="card-container flex m-7 space-x-6 " style=" height: 555px;  justify-content: center;">

      <div id="load" class="spinner-border text-primary"></div>

      <div class="card w-full" id="hienThidata" style="display: none">
        <div class="card w-full" style="display: flex;flex-direction: row;justify-content: space-between;">

          <div class="width-tab">
            <div class="text-title">
              Thông báo tất cả
            </div>
            <div >
              <form @submit.prevent="submitNotificationAllApp" class="mb-3" style="margin: 0 14px;">
                <div>
                    <textarea rows="4" cols="50" class="text-inputform" type="text"
                              v-model="formDataAllApp.noiDung" required></textarea>
                  <div class="input-group-append">
                    <button class="btn btn-primary" style="width: 100%;margin-top: 8px" type="submit">Gửi</button>
                  </div>
                </div>
              </form>

            </div>
            <div v-if="dataNotificationApp.length !== 0">
              <div class="text-delete" @click="openModal">Xóa tất cả</div>
              <div class="box-notification">
                <div style=" padding: 8px; background: #60eab1; border-radius: 8px; margin-bottom: 8px"
                     v-for="item in dataNotificationApp">
                  <div>\{{item.noiDung}}</div>
                  <div style="text-align: end;font-weight: 600;margin-top: 8px;">\{{formatDate(item.date)}}</div>
                </div>
              </div>
            </div>
          </div>
          <div class="width-tab">
            <div class="text-title">
              Thông báo cho 1 người dùng
            </div>
            <div>
              <form @submit.prevent="submitOneNotification" class="mb-3" style="margin: 0 14px;">
                <div>
                    <textarea rows="4" cols="50" class="text-inputform" type="text"
                              v-model="formData.noiDung" required></textarea>
                  <div style=" display: flex;  justify-content: space-between; margin-top: 8px;">
                    <div class="dropdown">
                      <input type="text" class="search" id="searchInput" placeholder="Tài khoản" autocomplete="off"
                             v-model="formData.userName"
                             style=" border: 1px solid; border-radius: 8px; outline: unset;" required>
                      <div class="options">
                        <div class="option" v-for="item in nameUserAll">\{{item}}</div>
                      </div>
                    </div>

                    <div class="input-group-append">
                      <button class="btn btn-primary" type="submit">Gửi</button>
                    </div>
                  </div>
                  <div :class="{'displayNone':checkThongTin}" style="color: red;font-weight: 700;font-family: sans-serif">
                    Tài khoản không đúng vui lòng nhập lại
                  </div>
                </div>
              </form>

            </div>
            <div  v-if="dataNotificationOneApp.length !== 0">
              <div class="text-delete" @click="openModalXoa">Xóa tất cả</div>
              <div class="box-notification">
                <div style="padding: 8px; background: #60eab1; border-radius: 8px;margin-bottom: 8px"
                     v-for="item in dataNotificationOneApp">
                  <div style="font-weight: 600;margin-bottom: 8px;">
                    Tài khoản: \{{item.userName}}
                  </div>
                  <div>\{{item.noiDung}}</div>
                  <div style="text-align: end;font-weight: 600;margin-top: 8px;">\{{formatDate(item.date)}}</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="xacNhan" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
       aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Bạn có chắc muốn xóa toàn bộ thông báo không ?</h5>
          <button type="button" class="close" @click="closeModal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form>
            <button type="button" class="btn btn-secondary"
                    data-dismiss="modal"> Thoát
            </button>
            <button @click="deleteAllNotification" type="button" class="btn btn-danger">Xác nhận</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="xacNhanXoa" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
       aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Bạn có chắc muốn xóa toàn bộ thông báo cho người dùng không ?</h5>
          <button type="button" class="close" @click="closeModalXoa" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form>
            <button type="button" class="btn btn-secondary"
                    data-dismiss="modal"> Thoát
            </button>
            <button @click="deleteAllNotificationOne" type="button" class="btn btn-danger">Xác nhận</button>
          </form>

        </div>
      </div>
    </div>
  </div>
</div>
</body>

<script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
<script>
  var vm = new Vue({
    el: "#dataALL",
    data: {
      idUser: '',
      formDataAllApp: {
        noiDung: ''
      },
      formData: {
        userName: '',
        noiDung: ''
      },
      tinNhanMoi: 0,
      donHangMoi: 0,
      dataNotificationApp: {},
      dataNotificationOneApp: {},
      nameUserAll: {},
      checkThongTin: true
    },
    mounted() {
      const socket = io();
      const self = this;
      socket.on('server-send', () => {
        self.GetAllDataChat();
        self.GetDataCart();
        self.GetDataNameUser();
        if (self.idUser.length > 0) {
          self.OpenChatUser(self.idUser);
        }
      });

      this.socket = socket;

    },
    beforeDestroy() {
      const socket = io();
      if (socket) {
        this.socket.disconnect();
      }
    },

    methods: {
      openModal() {
        $('#xacNhan').modal('show');
      },
      closeModal() {
        $('#xacNhan').modal('hide');
      },

      openModalXoa() {
        $('#xacNhanXoa').modal('show');
      },
      closeModalXoa() {
        $('#xacNhanXoa').modal('hide');
      },
      formatDate(vale) {
        const date = new Date(vale);

        const formattedDate = date.toLocaleDateString();
        const formattedTime = date.toLocaleTimeString();

        return `${formattedDate} - ${formattedTime}`;
      },
      GetAllDataChat: function () {
        var self = this;
        fetch('/chatAllShop', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        })
            .then(response => response.json())
            .then(data => {
              const sortedData = data.sort((a, b) => {
                if (a.status === b.status) {
                  return 0;
                }
                return a.status ? -1 : 1;
              });
              self.tinNhanMoi = sortedData.filter(item => item.status === true).length

              var load = document.getElementById("load")
              var duLieu = document.getElementById("hienThidata")
              load.style.display = "none"
              duLieu.style.display = "block"
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataCart: function () {
        var self = this;
        fetch('/loadDataChoXacNhan', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.donHangMoi = data.length
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataAllNotification: function () {
        var self = this;
        fetch('/dataNotification', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.dataNotificationApp = data
            })
            .catch(error => {
              console.error(error);
            });
      },

      GetDataAllOneNotification: function () {
        console.log(123)
        var self = this;
        fetch('/dataAllNotificationOneUser', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.dataNotificationOneApp = data
              console.log(self.dataNotificationOneApp)
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataNameUser: function () {
        const self = this;
        fetch('/dataNameUser', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.nameUserAll = data;
              setTimeout(function () {
                self.selectName();
              }, 1000);
            })
            .catch(error => {
              console.error(error);
            });
      },
      selectName: function () {
        var self = this
        const searchInput = document.getElementById('searchInput');
        const options = document.querySelector('.options');
        const optionItems = document.querySelectorAll('.option');
        searchInput.addEventListener('click', () => {
          options.style.display = 'block';
        });
        optionItems.forEach(option => {
          option.addEventListener('click', () => {
            self.formData.userName = option.textContent
            options.style.display = 'none';
          });
        });
        searchInput.addEventListener('input', () => {
          const searchValue = searchInput.value.toLowerCase();
          optionItems.forEach(option => {
            const optionText = option.textContent.toLowerCase();
            if (optionText.includes(searchValue)) {
              option.style.display = 'block';
            } else {
              option.style.display = 'none';
            }
          });
          options.style.display = 'block';
        });

        document.addEventListener('click', event => {
          if (!searchInput.contains(event.target)) {
            options.style.display = 'none';
          }
        });
      },
      submitNotificationAllApp() {
        var self = this
        fetch('/addNotification', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(self.formDataAllApp)
        })
            .then(response => response.json())
            .then(data => {
              if (data === true) {
                self.GetDataAllNotification()
                self.formDataAllApp.noiDung = '';
              }
            })
            .catch(error => {
              console.error(error);
            });
      },
      submitOneNotification() {
        var self = this
        fetch('/addNotificationOneUser', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(self.formData)
        })
            .then(response => response.json())
            .then(data => {
              if (data === true) {

                self.GetDataAllOneNotification()

                self.formData.noiDung = '';
                self.formData.userName = '';
                self.checkThongTin = true
              }else {
                self.formData.userName = '';
                self.checkThongTin = false
              }
            })
            .catch(error => {
              console.error(error);
            });
      },
      deleteAllNotification(){
        var self = this
        fetch('/deleteAllNotification', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(self.formDataAllApp)
        })
            .then(response => response.json())
            .then(data => {
              if (data === true) {
                self.GetDataAllNotification()
              }
              self.closeModal()
            })
            .catch(error => {
              console.error(error);
            });
      },
      deleteAllNotificationOne(){
        var self = this
        fetch('/deleteAllNotificationOne', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(self.formDataAllApp)
        })
            .then(response => response.json())
            .then(data => {
              if (data === true) {
                self.GetDataAllOneNotification()
              }
              self.closeModalXoa()
            })
            .catch(error => {
              console.error(error);
            });
      }
    }
  })

  vm.GetAllDataChat();
  vm.GetDataCart();
  vm.GetDataAllNotification();
  vm.GetDataNameUser();
  vm.GetDataAllOneNotification();

</script>
<script>

</script>
</html>