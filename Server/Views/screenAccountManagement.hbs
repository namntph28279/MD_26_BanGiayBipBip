<html lang="en">

<head>
  <title>Kho Hàng</title>
  <link rel="stylesheet" href="styles.css">

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <style>
    body {
      font-family: 'Arial', sans-serif;
    }
    .table td {
      vertical-align: middle;
      font-size: 15px;
    }

    .table .table-actions a {
      margin-right: 5px;
    }

    .btn-cf {
      outline: unset !important;
    }

    .mess {
      position: relative;
      display: inline-block;
    }

    .mess::after {
      content: "";
      position: absolute;
      left: 0;
      bottom: 0;
      width: 0;
      height: 1px;
      background-color: white;
      transition: width 0.5s ease-in-out;
    }

    .mess:hover::after {
      width: 100%;
    }


    .highcharts-data-table table {
      min-width: 320px;
      max-width: 800px;
      height: 400px;
      margin: 1em auto;
    }

    .box-size-table {
      display: flex;
      align-items: center;
      justify-content: end;
      padding: 14px 0;
      height: 13%;
      width: 100%;
    }

    .text-box-size-table {
      font-size: 16px;
      font-weight: 600;
      margin-right: 8px;
    }

    .box-arrow {
      display: flex;
      width: 10%;
      justify-content: space-around;
    }

    .box-extra-arrow {
      padding: 6px;
      border: 0.5px solid;
      cursor: pointer;
      margin-right: 2px;
    }

    .box-extra-arrow:hover {
      background: #dedede
    }

    .box-table {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      height: 100%;
    }

    .background_status {
      background: #E4E5E8FF;
    }

    .display_Block {
      display: block !important;
    }

    .check_Status {
      display: none;
      padding: 0 8px;
    }


    .box-Main {
      background: white;
      margin: 14px 8px;
      width: 99%;
      height: 96%;
    }

    .box-Main-Status {
      width: 100%;
      height: 6%;
    }

    .box-status {
      display: flex;
      height: 100%;
      justify-content: space-between;
    }

    .box-text-Status {
      display: flex;
    }

    .buttom-status {
      height: 100%;
      padding: 0 8px;
    }

    .text-sizse-color {
      color: white;
    }

    .margin-text-Status {
      margin: 0 10px;
    }

    .box-text-Status-extra {
      height: 7%;
      padding: 0 10px;
      display: flex;
      align-items: center;
    }

    .text-Status {
      color: #1307ef;
      font-family: sans-serif;
    }

    .box-order {
      width: 100%;
      height: 100%;
    }

    .box-Main-order {
      width: 100%;
      height: 87%;
    }

    .body-Main {
      display: flex;
      width: 100%;
      height: 100%;
    }

    .box-Main-One {
      width: 17%;
      height: 100%;
      background-color: rgba(49, 46, 129, var(--tw-bg-opacity));
      display: flex;
      flex-direction: column;
    }

    .box-Text-Title {
      background-color: rgba(55, 48, 163, var(--tw-bg-opacity));
      height: 13%;
      width: 100%;
    }

    .text-Title {
      color: white;
      font-size: 24px;
      padding: 24px;
      font-family: sans-serif;
      font-weight: 600;
    }

    .box-Main-Two {
      width: 84%;
      height: 100%;
    }

    .box-Main-Extra {
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
    }

    .box-infomation {
      width: 100%;
      height: 11%;
    }

    .information {
      display: flex;
      height: 100%;
      width: 100%;
      justify-content: space-between;
      padding: 0 18px;
      background: white;
      align-items: center;
    }

    .information-Admin {
      display: flex;
      width: 8%;
      justify-content: space-between;
      align-items: center;
    }

    .link-a:hover {
      text-decoration: none;
    }

    .link-a {
      color: black;
      font-size: 16px;
      font-family: sans-serif;
    }

    .box-order-Main {
      width: 100%;
      height: 89%;
    }

    .table-order {
      width: 100%;
      height: 87%;
    }

    .item-click {
      height: 87%;
      width: 100%;
    }

    .load-Spinner {
      padding: 20%;
      width: 100%;
      text-align: center;
    }

    .display_None {
      display: none;
    }
  </style>
</head>

<body class="bg-gray-200">
<div id="dataALL">
  <div class="body-Main">
    <div class="box-Main-One">
      <div class="box-Text-Title">
        <div class="text-Title">Shop BipBip</div>
      </div>
      <div class="item-click">
        <a href="/statistic" class=" cursor-pointer mess ml-3 mt-3 w-10/12"
           style="text-decoration: none ">
          <div class="flex" style=" padding: 12px;">
            <div>
              <img class="w-5 h-5" src="analytics.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100 ">Thống kê</div>
          </div>
        </a>
        <a href="/home" class=" cursor-pointer mess ml-3 mt-3 w-10/12"
           style="display: flex;text-decoration: none ">
          <div class="flex" style=" padding: 12px;">
            <div>
              <img class="w-5 h-5" src="dashboard.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100 ">Đơn Hàng</div>
          </div>
          <span class="badge" style="color: white;font-size: 14px;">\{{donHangMoi}}</span>
        </a>
        <a href="/mess" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="display: flex; text-decoration: none">
          <div class="flex" style="padding: 12px;">
            <div>
              <img class="w-5 h-5 " src="messages.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100 ">Tin Nhắn</div>
          </div>
          <span class="badge" style="color: white;font-size: 14px;">\{{tinNhanMoi}}</span>
        </a>
        <a href="/notifications" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="text-decoration: none">
          <div class="flex" style=" padding: 12px;">
            <div>
              <img class="w-5 h-5" src="notifications.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100">Thông báo</div>
          </div>
        </a>
        <a href="/accountManagement" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="border-bottom-width: 1px; display: flex; text-decoration: none">
          <div class="flex" style="padding: 12px;">
            <div>
              <img class="w-5 h-5 " src="iconuser.png" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100 ">Quản Lý người dùng</div>
          </div>
        </a>
        <a href="/warehouse" class="cursor-pointer mess ml-3 mt-3 w-10/12" style="text-decoration: none">
          <div class="flex" style=" padding: 12px;">
            <div>
              <img class="w-5 h-5" src="kho.svg" alt="">
            </div>
            <div class="mx-3 text-sm text-gray-100">Kho Hàng</div>
          </div>
        </a>
      </div>
    </div>
    <div class="box-Main-Two">
      <div class="box-Main-Extra">
        <div class="box-infomation">
          <div class="information">
            <div class="information-Admin">
              <img src="person.png" class="w-10 h-10" alt="">
              <span>Admin</span>
            </div>
            <div>
              <a class="link-a" href="/login">Đăng xuất</a>
            </div>
          </div>
        </div>

        <div class="box-order-Main">
          <div class="load-Spinner" :class="checkStatus ? ' ' : 'display_None' ">
            <div class="spinner-border text-primary"></div>
          </div>
          <div :class="checkStatus ? 'display_None' : ' ' ">
            <div class="box-Main">

            </div>
          </div>
        </div>
      </div>
    </div>


  </div>
</div>

</body>

<script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>

<script>
  var vm = new Vue({
    el: "#dataALL",
    data: {
      indexSize: 1,
      tinNhanMoi: 0,
      donHangMoi: 0,
      dataWarehouseAll: {},
      dataSearch: {},
      dataSuaSanPham: {},
      dataXoaSanPham: {},
      toatalWare: 0,
      checkThongTin: true,
      checkInputNotificationAll: false,
      checkInputNotificationOne: false,
      checkInputUserNameOne: false,
      checkStatus: true,
      selectedValueGender: 'Tất cả',
      selectedValueMoney: 'Giá',
      dataCate: 'all',
      searchData: '',
      selectGender: 'Giới tính',
      selectGenderClick: [
        {value: 'men', name: 'Nam'},
        {value: 'women', name: 'Nữ'},
      ],
      formData: {
        product_image: "",
        product_title: "",
        product_price: "",
        product_category: ""
      },
    },
    mounted() {
      const socket = io();
      const self = this;
      socket.on('server-send', () => {
        self.GetAllDataChat();
        self.GetDataCart();
        self.GetDataNameUser();
        if (self.idUser.length > 0) {
          self.OpenChatUser(self.idUser);
        }
      });

      this.socket = socket;

    },
    beforeDestroy() {
      const socket = io();
      if (socket) {
        this.socket.disconnect();
      }
    },
    watch: {
      searchData(newKeyword) {
        var self = this;
        if (newKeyword === '') {
          var dataAll = splitList(self.dataSearch, 4)
          self.toatalWare = self.dataSearch.length
          return self.dataWarehouseAll = dataAll
        }
        self.filterData(newKeyword);
      }
    },

    methods: {
      submitDeleteContentChat() {
        var self = this;
        fetch(`/home/delete/${self.dataXoaSanPham._id}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(self.formData)
        })
            .then(response => response.json())
            .then(data => {
              self.loadDataWarehouseLast()
              self.closeModalXoaSP()
            })
            .catch(error => {
              console.error(error);
            });
      },
      selectClickGender() {
        this.formData.product_category = this.selectGender
      },
      openModalSuaSP(data) {
        this.formData.product_title = data.product_title
        this.formData.product_price = data.product_price
        this.formData.product_category = data.product_category

        this.dataSuaSanPham = data
        this.selectGender = data.product_category
        $('#SuaSP').modal('show');
      },
      closeModalSuaSP() {
        this.dataSuaSanPham = {};

        $('#SuaSP').modal('hide');
      },

      openModalXoaSP(data) {
        this.dataXoaSanPham = data
        $('#XoaSP').modal('show');
      },
      closeModalXoaSP() {
        this.dataXoaSanPham = {};
        $('#XoaSP').modal('hide');
      },
      filterData(keyword) {
        var self = this;
        const key = keyword.toLowerCase();
        const dataSreachs = self.dataSearch.filter(product => product.product_title.toLowerCase().includes(key));
        var dataAll = splitList(dataSreachs, 4)
        self.toatalWare = dataSreachs.length
        return self.dataWarehouseAll = dataAll
      },
      XemChiTiet(data) {
        console.log(data)
        window.location.href = `/home/detail/${data}`;
      },
      selectOptionSort(value) {
        var self = this
        if (value === 'highttolow') {
          self.selectedValueMoney = 'Giá: Cao đến Thấp'
          self.loadDataSortWarehouse(self.dataCate, 'highttolow')
        } else {
          self.selectedValueMoney = 'Giá: Thấp đến Cao'
          self.loadDataSortWarehouse(self.dataCate, 'lowtohight')
        }
      },
      selectOptionGender(value) {
        var self = this
        if (value === 'all') {
          self.dataCate = 'all'
          self.selectedValueGender = 'Tất cả'
          self.loadDataWarehouseLast();
        } else if (value === 'men') {
          self.selectedValueGender = 'Nam'
          self.dataCate = 'men'
          self.loadDataWarehouse('men')
        } else {
          self.selectedValueGender = 'Nữ'
          self.dataCate = 'women'
          self.loadDataWarehouse('women')
        }
      },
      formatPrice(value) {
        let val = (value / 1).toFixed(0);
        return val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " đ";
      },
      sizeTable(vale) {
        const start = (vale - 1) * 4 + 1
        const end = (vale - 1) * 4 + 4
        return `${start} - ${end}`;
      },

      nextSize(arr) {
        var self = this
        self.indexSize = arr.length
      },
      arrowNextSize(arr) {
        var self = this
        var i = self.indexSize
        if (0 < i && i < arr.length) {
          self.indexSize = i + 1
        }
      },
      arrowBackSize(arr) {
        var self = this
        var i = self.indexSize
        if (1 < i && i <= arr.length) {
          self.indexSize = i - 1
        }
        console.log(i)
      },
      backSize(arr) {
        var self = this
        self.indexSize = 1
      },
      openModal() {
        $('#xacNhan').modal('show');
      },
      closeModal() {
        $('#xacNhan').modal('hide');
      },

      openModalXoa() {
        $('#xacNhanXoa').modal('show');
      },
      closeModalXoa() {
        $('#xacNhanXoa').modal('hide');
      },

      GetAllDataChat: function () {
        var self = this;
        fetch('/chatAllShop', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        })
            .then(response => response.json())
            .then(data => {
              const sortedData = data.sort((a, b) => {
                if (a.status === b.status) {
                  return 0;
                }
                return a.status ? -1 : 1;
              });
              self.tinNhanMoi = sortedData.filter(item => item.status === true).length

            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataCart: function () {
        var self = this;
        fetch('/loadDataChoXacNhan', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              self.donHangMoi = data.length
            })
            .catch(error => {
              console.error(error);
            });
      },
      GetDataWarehouse: function () {
        var self = this;
        self.loadDataWarehouseLast();
      },


      loadDataWarehouse(value) {
        var self = this
        fetch(`/warehouse/${value}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              var dataAll = splitList(data, 4)
              self.dataWarehouseAll = dataAll
              self.dataSearch = data
              self.toatalWare = data.length
            })
            .catch(error => {
              console.error(error);
            });
      },

      loadDataWarehouseLast() {
        var self = this
        fetch(`/dataWarehouse`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              var dataAll = splitList(data, 4)
              self.dataWarehouseAll = dataAll
              self.toatalWare = data.length
              self.dataSearch = data
              self.checkStatus = false
            })
            .catch(error => {
              console.error(error);
            });
      },

      loadDataSortWarehouse(cate, sort) {
        const self = this;
        fetch(`/warehouse/${cate}/${sort}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
            .then(response => response.json())
            .then(data => {
              const dataAll = splitList(data, 4);
              self.dataWarehouseAll = dataAll;
              self.dataSearch = data
              self.totalWare = data.length;
            })
            .catch(error => {
              console.error(error);
            });
      }
    }
  })
  vm.GetDataWarehouse();
  vm.GetAllDataChat();
  vm.GetDataCart();

  function splitList(arr, size) {
    let result = [];
    for (let i = 0; i < arr.length; i += size) {
      let chunk = arr.slice(i, i + size);
      result.push(chunk);
    }
    return result;
  }


</script>
</html>